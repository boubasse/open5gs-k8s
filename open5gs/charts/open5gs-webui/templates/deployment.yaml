{{- with .Values.webui }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "open5gs-webui.fullname" $ }}
  labels:
    {{- include "open5gs-webui.labels" $ | nindent 4 }}
spec:
  {{- if not .autoscaling.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "open5gs-webui.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "open5gs-webui.labels" $ | nindent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      
      initContainers:
      - name: wait-mongo
        {{- with $.Values.global.initcontainers.busybox }}
        image: {{ .image }}:{{ .tag }}
        {{- end }}
        env:
        - name: MONGO
          value: {{ $.Values.global.mongodb.service.name }}:{{ $.Values.global.mongodb.service.port }}
        command: ["sh", "-c", "until nc -z $DEPENDENCIES; do echo waiting for the MongoDB; sleep 2; done;"]
      containers:
      - name: {{ .name }}
        securityContext:
          {{- toYaml .securityContext | nindent 12 }}
        image: "{{ .image.registry }}/{{ .image.name }}:{{ .image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        env:
        - name: PORT
          value: "{{ .service.port }}"
        - name: DB_URI
          value: {{ $.Values.global.db_uri }} 
        ports:
        - name: webui-svc
          containerPort: {{ .service.port }}
        resources:
          {{- toYaml .resources | nindent 12 }}
        command: ["npm run dev"]
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}
{{- end }}
